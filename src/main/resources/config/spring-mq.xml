<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:config/application.properties"
                                  ignore-unresolvable="true" />
    <context:annotation-config/>
    <!--ActiveMQ为我们提供的ConnectionFactory-->
    <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${MQ.brokerurl}"/>
        <property name="userName" value="${MQ.username}"/>
        <property name="password" value="${MQ.password}"/>
        <property name="redeliveryPolicyMap" ref="redeliveryPolicyMap"/>
    </bean>
    <!--这里设置各个消息队列的重发机制-->
    <bean id="redeliveryPolicyMap" class="org.apache.activemq.broker.region.policy.RedeliveryPolicyMap">
        <property name="redeliveryPolicyEntries">
            <list>
                <ref bean="customerRedeliveryPolicy"/>
                <ref bean="producerRedeliveryPolicy"/>
                <ref bean="allRedeliveryPolicy"/>
            </list>
        </property>
    </bean>
    <bean id="customerRedeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
        <!--重发次数 延时、延时系数、延时指数开关、目标（重发等待时间1s, 2s, 4s, 8s）-->
        <property name="maximumRedeliveries" value="${MQ.maximumRedeliveries}"/>
        <property name="redeliveryDelay" value="${MQ.redeliveryDelay}"/>
        <property name="useExponentialBackOff" value="false"/>
        <property name="destination" ref="customerqueue"/>
    </bean>
    <bean id="producerRedeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
        <!--重发次数 延时、延时系数、延时指数开关、目标（重发等待时间1s, 2s, 4s, 8s）-->
        <property name="maximumRedeliveries" value="${MQ.maximumRedeliveries}"/>
        <property name="redeliveryDelay" value="${MQ.redeliveryDelay}"/>
        <property name="useExponentialBackOff" value="false"/>
        <property name="destination" ref="producerqueue"/>
    </bean>
    <bean id="allRedeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
        <!--重发次数 延时、延时系数、延时指数开关-->
        <property name="maximumRedeliveries" value="${MQ.maximumRedeliveries}"/>
        <property name="redeliveryDelay" value="${MQ.redeliveryDelay}"/>
        <property name="useExponentialBackOff" value="false"/>
        <property name="destination" ref="allqueue"/>
    </bean>
    <!--
        ActiveMQ为我们提供了一个PooledConnectionFactory，通过往里面注入一个ActiveMQConnectionFactory
        可以用来将Connection、Session和MessageProducer池化，这样可以大大的减少我们的资源消耗。
        要依赖于 activemq-pool包
     -->
    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="connectionFactory" ref="targetConnectionFactory"/>
        <property name="maxConnections" value="${MQ.maxConnections}"/>
    </bean>

    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="pooledConnectionFactory"/>
        <property name="reconnectOnException" value="true"/>
    </bean>

    <!--队列模式，点对点的-->
    <bean id="allqueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="${MQ.allmobilequeue}"/>
    </bean>
    <bean id="customerqueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="${MQ.customermobilequeue}"/>
    </bean>
    <bean id="producerqueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="${MQ.producermobilequeue}"/>
    </bean>


</beans>